############################################################
# +------------------------------------------------------+ #
# |            Guilds Expanded by Smashbox               | #
# |            Guilds Plugin by GlareMasters             | #
# +------------------------------------------------------+ #
############################################################

// aliases
*:/g = call_alias('/guilds');
*:/g help [$] = call_alias('/guilds');
*:/guild help [$] = call_alias('/guilds');
*:/guilds help [$] = call_alias('/guilds');
*:/guilds = run('/dm open guilds');
*:/guild flag = call_alias('/guild flags');
*:/gc = run('/guild chat');
*:/guild claim = call_alias('/g claim');
*:/guilds claim = call_alias('/g claim');

// menus
*:/guild flags = foreach(split('\\n', read('../../docs/guild-flags.txt')), @msg) { msg(colorize(@msg)) }

#===============================#
# guild claim
#===============================#
*:/g claim = >>>

  // vars
  @player = player();
  @loc = ploc();
  @dloc = array(@loc['x'] + 12, @loc['y'], @loc['z'] - 12, pworld());
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;
  @tempregion = 'temp-'.@guild;

  // check role
  if(@grole != 'GuildMaster') {
    _gdie('You must be a Guild Master to claim land.');
  }

  // check if player is in world survival
  if(pworld(@player) != 'survival') {
    _gdie('You are not in the right world to use this command.');
  }

  // check if region exists
  if(sk_region_exists(pworld(), @gregion)) {
    _gdie('Uh.. this guild already has a claim.');
  }

  // make temp region to for overlap test
  sk_region_create(pworld(), @tempregion, array(array(@loc['x'] + 50, 255, @loc['z'] + 50), array(@loc['x'] - 50, 0, @loc['z'] - 50)));
  foreach(sk_all_regions(pworld()), @region){
    if(to_lower(@region) != to_lower(@tempregion)) {
      if(sk_region_overlaps(pworld(), @tempregion, @region)) {
        
        // if overlap test fail
        sk_region_remove(pworld(), @tempregion);
        _gdie('This claim is too close to &f'.@region.'&7. Try somewhere else.');
      }
    }
  }

  // if overlap test pass
  sk_region_remove(pworld(), @tempregion);
  sk_region_create(pworld(), @gregion, array(array(@loc['x'] + 12, 255, @loc['z'] + 12), array(@loc['x'] - 12, 0, @loc['z'] - 12)));
  sk_region_addowner(@gregion, pworld(), @player);
  sk_region_flag(pworld(), @gregion, greeting, '&aNow entering &f'.@gname.'\'s &aguild claim!');
  sk_region_flag(pworld(), @gregion, farewell, '&aNow leaving &f'.@gname.'\'s &aguild claim!');
  sk_region_flag(pworld(), @gregion, enderpearl, deny, NON_MEMBERS);
  sk_region_flag(pworld(), @gregion, 'blocked-cmds', '/sethome, /tpahere, /tpaccept', NON_MEMBERS);
  runas('~console', '/rg flag '.@gregion.' glide -w survival -g nonmembers deny');
  _gdie('Success! Your guild land has been claimed.');

<<< 

#===============================#
# guild trust
#===============================#

// aliases
*:/guild trust [$] = call_alias('/g trust'$);
*:/guilds trust [$] = call_alias('/g trust'$);

*:/g trust [$player] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;

  // if no player is specified
  if($player == '') {
    _gdie('Usage: &a/g trust &8<&aplayer&8>');
  }

  // check role
  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  // check if region exists
  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  // warn player
  _gmsg('This player will have FULL access to your guild claim. Are you sure? Type &a/confirm&7 or &c/cancel');
  
  // bind command event
  @id = bind(player_command, null, null, @event, @gregion) {

    // if yes
    if(@event['command'] == '/confirm') {

      // problem with ugly UUID, use runas instead
      #sk_region_addmember(@gregion, pworld(), $player);
      runas('~console', '/rg addmember '.@gregion.' -w survival -n '.$player);
      _gmsg('Added&f '.$player.' &7to your guild claim.');

    // if no
    } else if(@event['command'] == '/cancel') {
      _gmsg('&f'.$player.' &7was not trusted.');

    // if anything but
    } else {
      _gmsg('Trust request cancelled');
    }

    unbind();
    cancel();
  }

  // if 15 seconds passes expire command
  set_timeout(15000, closure(){
    if(has_bind(@id)) {
      unbind(@id);
      _gmsg('&cCommand expired. &f'.$player.' &7not trusted.');
    }
  });

<<<

#===============================#
# guild UNtrust
#===============================#

*:/guild untrust [$player] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;

  // if no player specified
  if($player == '') {
    _gdie('Usage: &a/g untrust &8<&aplayer&8>');
  }
  
  // check role
  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  // check if region exists
  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  // uuid junk, use runas
  #sk_region_remmember(@gregion, pworld(), $player);
  runas('~console', '/rg removemember '.@gregion.' -w survival '.$player);
  _gdie('Removed&f '.$player.' &7from your guild claim.');

// end
<<<

#===============================#
# guild trustlist
#===============================#

*:/guild trustlist = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;
  @trustlist = sk_region_members(@gregion, 'survival')[names];
  @players = array_implode(@trustlist, color(7).', '.color(a));

  // check role
  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  // check if region exists
  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  // success
  _gmsg(
    'Members with claim access&7:'
    '\n&a'.@players
  );

<<<

#===============================#
# guild bank commands
#===============================#

*:/guild bank deposit $amount = call_alias('/g bank deposit '.$amount);
*:/guilds bank deposit $amount = call_alias('/g bank deposit '.$amount);
*:/g bank deposit $amount = >>>
  if(is_integral($amount) == 'true') {
    run('/g bank deposit '.$amount)
  } else {
    _gdie('The amount needs to be an integer.');
  }
<<<

*:/guild bank withdraw $amount = call_alias('/g bank withdraw '.$amount);
*:/guilds bank withdraw $amount = call_alias('/g bank withdraw '.$amount);
*:/g bank withdraw $amount = >>>
  if(is_integral($amount) == 'true') {
    run('/g bank withdraw '.$amount)
  } else {
    _gdie('The amount needs to be an integer.');
  }
<<<

#===============================#
# guild greeting message
#===============================#

// aliases
*:/guild greeting [$] = call_alias('/g greeting'$);
*:/guilds greeting [$] = call_alias('/g greeting'$);

*:/g greeting [$] = >>>
  
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;

  if($ == '') {
    _gdie('Usage: &a/guild greeting &8<&amessage&8>');
  }

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  sk_region_flag(pworld(), @gregion, greeting, $);
  _gdie('Greeting updated to&8: &f'.$);

<<<

#===============================#
# guild farewell message
#===============================#

// aliases
*:/guild farewell [$] = call_alias('/g farewell'$);
*:/guilds farewell [$] = call_alias('/g farewell'$);

*:/g farewell [$] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @gregion = 'guild-'.@gname;

  if($ == '') {
    _gdie('Usage: &a/guild farewell &8<&amessage&8>');
  }

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  sk_region_flag(pworld(), @gregion, farewell, $);
  _gdie('Farewell updated to&8: &f'.$);

<<<

#===============================#
# guild plot claim
#===============================#

// aliases
*:/plot = foreach(split('\\n', read('docs/plot.txt')), @msg) { msg(colorize(@msg)) }
*:/plots = call_alias('/plot');

*:/plot claim [$plot] = >>>
  
  // vars
  @player = player();
  @pos1 = sk_pos1(@player);
  @pos2 = sk_pos2(@player);
  @parent = sk_regions_at(ploc())
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname;
  @plot = @gregion.'-'.$plot;

  // check if plot name specified
  if($plot == '') {
    _gdie('Usage: &a/plot claim &8<&aplotname&8>');
  }
  
  // check role
  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  // check guild level
  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  // check if plot positions are selected
  if(is_null(sk_pos1()) || is_null(sk_pos2())) {
    _gdie('Make a selection first! Duh!');
  }

  // check if plot name exists
  if(sk_region_exists(pworld(), @plot)) {
    _gdie('A plot with this name already exists. Snap out of it!');
  }

  // for every region at the location @pos1, @region is replaced with the region name.
  foreach(sk_regions_at(@pos1), @region) {

    // if the owner of the region in question is the player
    # if(array_contains_ic(sk_region_owners(@region, pworld())[names], @player)) {
    if(@region == @gregion) {
      /*if the second location is also in the region we are checking */
      if(array_contains(sk_regions_at(@pos2), @region)) {
        if(@parent) {
          /* Probably add some checking here to make sure users name is proper */
          sk_region_create(pworld(), @plot, array(@pos1, @pos2));
          sk_region_addmember(@plot, pworld(), player());
          sk_region_setparent(pworld(), @plot, @gregion);
          run('//sel');
          _gdie('Success! Plot claimed&8: &a'.$plot);
        }
      }
    }
  }
  msg(@region)
  _gdie('&cHey dummy&7! Don\'t create plots outside of your land!');

<<<

#===============================#
# guild plot UNclaim
#===============================#

*:/plot unclaim [$plot] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname
  @plot = @gregion.'-'.$plot

  // if no plot specified
  if($plot == '') {
    _gdie('Usage: &a/plot unclaim &8<&aplotname&8>');
  }

  // check role
  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  // check guild level
  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  // check if region exists in player's current world
  if(!sk_region_exists(pworld(), @plot)) {
    _gdie('Typo? There is no plot by the name of &c'.$plot);
  }

  sk_region_remove(pworld(), @plot);
  _gdie('Success! Removed plot &a'.@plot);

<<<

#===============================#
# guild plot add player
#===============================#

*:/plot add $player $plot = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname;
  @plot = @gregion.'-'.$plot;

  if($player == '' || $plot == '') {
    _gdie('Usage: &a/plot add &8<&aplayer&8> &8<&aplot&8>');
  }

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  if(!sk_region_exists('survival', @plot)) {
    _gdie('Typo? There is no plot by the name of &c'.$plot);
  }

  #sk_region_addmember(@plot, 'survival', $player);
  runas('~console', '/rg addmember '.@plot.' -w survival -n '.$player);
  _gdie('Success! &f'.$player.' &7added to plot &a'.$plot.'&7!');

<<<

#===============================#
# guild plot remove player
#===============================#
*:/plot rem [$player] [$plot] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname;
  @plot = @gregion.'-'.$plot;

  if($player == '' || $plot == '') {
    _gdie('Usage: &a/plot rem &8<&aplayer&8> &8<&aplot&8>');
  }

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  if(!sk_region_exists('survival', @plot)) {
    _gdie('Typo? There is no plot by the name of &c'.$plot);
  }

  #sk_region_remmember(@plot, 'survival', $player);
  runas('~console', '/rg removemember '.@plot.' -w survival -n '.$player);
  _gdie('Success! &f'.$player.' &7removed from plot &a'.$plot.'&7!');

<<<

#===============================#
# guild plot list
#===============================#
*:/plot list = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname;

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You do not have any Guild claimed land in this world.');
  }

  @regions = sk_region_intersect(pworld(), @gregion);
  _gmsg('You have the following plots&7:');
  foreach(@value in @regions){
    @split = split('-', @value);
    @plotname = @split[array_size(@split) - 1];
    msg(colorize(
      '&f'.@plotname
    ));
  }
  
<<<

#===============================#
# guild plot remove player
#===============================#
*:/plot info [$plot] = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');
  @grole = set_placeholders(player(), '%Guilds_role%');
  @glevel = set_placeholders(player(), '%Guilds_tier%');
  @gregion = 'guild-'.@gname;
  @plot = @gregion.'-'.$plot;

  if($plot == '') {
    _gdie('Usage: &a/plot info &8<&aplotname&8>');
  }

  if(@grole != 'GuildMaster' && @grole != 'Officer') {
    _gdie('You do not meet the requirements to do this.');
  }

  if(@glevel < '2') {
    _gdie('Your guild must be at least &flevel 2 &7to use plots.');
  }

  if(!sk_region_exists('survival', @gregion)) {
    _gdie('You don\'t have a guild claim.');
  }

  if(!sk_region_exists('survival', @plot)) {
    _gdie('Typo? There is no plot by the name of &c'.$plot);
  }

  die(msg(sk_region_members(@plot, pworld())[names]));

<<<

#===============================#
# guild plot remove player
#===============================#

// aliases
*:/guild sethome = call_alias('/g sethome');
*:/guilds sethome = call_alias('/g sethome');

*:/g sethome = >>>

  // vars
  @gname = set_placeholders(player(), '%Guilds_name%');

  if(!array_contains_ic(sk_current_regions(player()), 'guild-'.@gname)) {
    _gdie('Guild homes can only be set inside guild of claims.');
  } else {
    run('/guilds sethome');
  }

<<<

/*
#Requires X guild members to claim land.
*:/guild claim = call_alias('/g claim');
*:/guilds claim = call_alias('/g claim');
*:/g claim = >>>
  @members = set_placeholders(player(), '%Guilds_member_count%');
  if(@members < 3) {
    _gdie('You need at least &a3 &7guild members to claim land.')
  } else {
    run('/guilds claim');
  }
<<<
*/